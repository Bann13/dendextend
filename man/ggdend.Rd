% Generated by roxygen2 (4.0.2): do not edit by hand
\name{ggdend}
\alias{as.ggdend}
\alias{as.ggdend.dendrogram}
\alias{ggdend}
\alias{ggplot.dendrogram}
\alias{ggplot.ggdend}
\title{Creates dendrogram plot using ggplot.}
\source{
These are extended versions of the functions \[ggdendro]{ggdendrogram}, \[ggdendro]{dendrodata} (and the hidden dendrogram_data)
from Andrie de Vries's ggdendro package. The motivation for this fork is the need to add more graphical parameters
to the plotted tree. This required a strong mixter of functions from ggdendro and dendextend (to the point that
it seemed better to just fork the code into its current form)
}
\usage{
as.ggdend(dend, ...)

\method{as.ggdend}{dendrogram}(dend,
                  type = c("rectangle", "triangle"), edge.root = FALSE, ...)

\method{ggplot}{ggdend}(data,  segments = TRUE, leaf_labels = TRUE,
                        horiz = FALSE, ...)

\method{ggplot}{dendrogram}(data, ...)
}
\arguments{
\item{...}{mostly ignored.}

\item{dend}{a \link{dendrogram} tree (to turn into a ggdend object)}

\item{type}{The type of plot, indicating the shape of the dendrogram.  "rectangle" will draw
rectangular lines, while "triangle" will draw triangular lines.}

\item{edge.root}{currently ignored. One day it might do the following: logical; if true, draw an edge to the root node.}

\item{data}{a ggdend class object.}

\item{segments}{a logical (TRUE) if to plot the segments (branches).}

\item{labels}{a logical (TRUE) if to plot the labels.}

\item{horiz}{a logical (TRUE) indicating if the dendrogram should be drawn horizontally or not.}
}
\value{
\itemize{
\item{\code{as.ggdend} - returns an object of class ggdend which is a list with 3 componants: segments, labels, nodes.
Each one contains the graphical parameters from the original dendrogram, but in a tabular form that
can be used by ggplot2+geom_segment+geom_text to create a dendrogram plot.}
\item{\code{ggplot.ggdend} - a \link{ggplot} object}
}
}
\description{
Several functions for creating a dendrogram plot using ggplot2.
The core process is to transform a dendrogram into a ggdend object using as.ggdend,
and then plot it using ggplot. These two steps can be done in one command with either the function
ggplot or ggdend.

The reason we want to have as.ggdend (and not only ggplot.dendrogram), is (1) so that you could
create your own mapping of ggdend and, (2) since as.ggdend might be slow for large trees,
it is probably better to be able to run it only once for such cases.

A ggdend class object is a list with 3 componants: segments, labels, nodes.
Each one contains the graphical parameters from the original dendrogram, but in a tabular form that
can be used by ggplot2+geom_segment+geom_text to create a dendrogram plot.
}
\details{
This is an extension of the function dendrogram_data, from Andrie de Vries's ggdendro package (which is a modified \link{plot.dendrogram}).
It was created basically to include segments and labels data so that they could be represented in the plot.
}
\examples{
\dontrun{

library(dendextend)
library(ggplot2)
# library(ggdendro)
dend <- iris[1:30,-5] \%>\% dist \%>\% hclust \%>\% as.dendrogram \%>\%
   set("branches_k_color", k=3) \%>\% set("branches_lwd", c(1.5,1,1.5)) \%>\%
   set("branches_lty", c(1:4)) \%>\%
   set("labels_colors") \%>\% set("labels_cex", c(.9,1.2))
plot(dend)
# Rectangular lines
ggd1 <- as.ggdend(dend)
ggplot(ggd1) # reproducing the above plot in ggplot2 :)
ggplot(ggd1, horiz = TRUE) # horiz plot in ggplot2
# Adding some extra spice to it...
# creating a radial plot:
ggplot(ggd1) + scale_y_reverse(expand = c(0.2, 0)) + coord_polar(theta="x")
# The text doesn't look so great, so let's remove it:
ggplot(ggd1, leaf_labels = FALSE) + scale_y_reverse(expand = c(0.2, 0)) + coord_polar(theta="x")

# This can now be sent to plot.ly - which adds zoom-in abilities, and more.

}
}
\seealso{
\link{dendrogram}, \link{edgePar_attr}, \link{get_nodes_attr}
\link{leaves_edgePar_attr}, \[ggdendro]{ggdendrogram}, \[ggdendro]{dendrodata},
}

