TODO for future releases:
=========================


New functions
--------------
   * add a print/warn parameter to intersect_trees
   * add rect.hclust.nice http://stackoverflow.com/questions/4720307/change-dendrogram-leaves 
   * Give this a thought: http://stackoverflow.com/questions/10088117/exporting-dendrogram-as-table-in-r?rq=1
   * create rect.dendrogram (and make rect generic). http://stackoverflow.com/questions/717747/how-do-i-color-edges-or-draw-rects-correctly-in-an-r-dendrogram
http://stackoverflow.com/questions/4720307/change-dendrogram-leaves
   * hide some function's doc (labels<-.stuff)


New GUIs
---------
	* GUI for Rcmdr
	* GUI for Deducer
	* GUI with Shiny
	

More DOCS
---------
	* Fix the demo / or work on a nice vignette
	* cross-ref untangle functions docs

Questions to answer
------------------
	* reply here: http://stackoverflow.com/questions/10571266/colouring-branches-in-a-dendrogram-in-r?rq=1
      
   
General ideas
------------------
   * An algorithm to find subtrees that are topologically identical between the two trees - and color them accordingly.
   * Get stats::midcache.dendrogram to work for non-binary trees...
   * cut_replace - make it in Rcpp - to make cutree_1h.dendrogram faster...
   * See this code: https://github.com/andrie/ggdendro/blob/master/R/dendro_rpart.R
   for creating an rpart plotting machanism using dendrograms!
   This will enable hilighting one branch/rule.
   Note that more "attr" will need to be added to the tree in order to
   include all of the rpart information. This could also allow the merging of plots from rpart/party etc. 
   
   * Add as.dendrogram.ctree . Example code for further work:
require(party)
set.seed(290875)
### regression
airq <- subset(airquality, !is.na(Ozone))
airct <- ctree(Ozone ~ ., data = airq, 
                   controls = ctree_control(maxsurrogate = 3))
airct
plot(airct)
str(airct@tree)
# as.dendrogram.ctree will need to work with the above object
# to extract the elements needed for detecting the tree's parameters...

	* Create: as.dendrogram.randomForest (a template is available in the R folder)	
	* Check if I need to implement something from here: http://r.789695.n4.nabble.com/dendrogram-plot-does-not-draw-long-labels-td3235843.html
	* Also good: get the conditions in a tree: http://stats.stackexchange.com/questions/41443/how-to-actually-plot-a-sample-tree-from-randomforestgettree
	* Look into the proximity matrix produced from a randomForest:
data(iris)
require(randomForest)
mod.rf <- randomForest(Species ~ ., data=iris,  proximity=TRUE)
hc <- hclust(as.dist(mod.rf$proximity))
plot(as.dendrogram(hc))
MDSplot(mod.rf, iris$Species)
	
	* Combine with gridBase to include sub plots like in {party: ?plot.BinaryTree}	
	Sources:
		http://cran.r-project.org/web/packages/party/vignettes/party.pdf
		http://sublogo.r-forge.r-project.org/
		http://casoilresource.lawr.ucdavis.edu/drupal/node/1007
		http://cran.r-project.org/web/packages/gridBase/vignettes/gridBase.pdf
	* give examples with http://cran.r-project.org/web/packages/treemap/index.html
	

	* Ideas for improving the package: http://robjhyndman.com/hyndsight/jss-rpackages/
	
	* use match.arg
	